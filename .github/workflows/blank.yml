# This is a basic workflow to help you get started with Actions

name: tagging and release 

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      create_new_tag:
        description: create_new_tag? 
        required: true
        default: 'false'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          if: github.event.inputs.create_new_tag != 'true' and ${{ github.ref == 'refs/heads/main' }}
      - name: Creating major tag -.X.- from main
        id: tag_id
        run: |
        
          git config user.name github-actions@github.com
          git config user.email github-actions
          git config --global http.postBuffer 1048576000
          
          git fetch --all
          
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          
          run_id=${{ github.run_number }}
          
          tag_name=${latest_tag%.*}.$((${v##*.}+1))
          
          echo $tag_name

          echo ::set-output name=tag_id::$tag_name

        if: github.event.inputs.create_new_tag == 'true' and ${{ github.ref == 'refs/heads/main' }}
      - name: Creating version tag X.-.- from main
        id: major_id
        run: |
        
          git config user.name github-actions@github.com
          git config user.email github-actions
          git config --global http.postBuffer 1048576000
          
          git fetch --all
          
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          
          run_id=${{ github.run_number }}
          
          tag_name=${latest_tag%%.*}.$run_id
          
          echo $tag_name

          echo ::set-output name=tag_id::$tag_name
          
        if: ${{ github.ref == 'refs/heads/develop' }}
      - name: Creating minior tag -.-.X from main
        id: minor_id
        run: |
        
          git config user.name github-actions@github.com
          git config user.email github-actions
          git config --global http.postBuffer 1048576000
          
          git fetch --all
          
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          
          run_id=${{ github.run_number }}
          tag_name=${latest_tag%.*}.$((${v##*.}+1))
          
          echo $tag_name
          echo ::set-output name=tag_id::$tag_name

          
      - name: Release snapshot
        id: release-snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_id.outputs.tag_id }}
          release_name: ${{ steps.tag_id.outputs.tag_id }}
          draft: false
          prerelease: false
          
      
